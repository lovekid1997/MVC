@model BookStore.Models.KhachHang

@{
    ViewBag.Title = "SuaThongTin";
    Layout = "~/Views/Layout/AdminLayout.cshtml";
}

<hr />
<div style="margin-left:27%">
    <h1>Sửa thông tin khách hàng</h1>
</div>

@using (Html.BeginForm())   
{
    @Html.AntiForgeryToken()    

    <div class="form-horizontal">

        <hr style="background-color:black" />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.MaKH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaKH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaKH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HoTen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaiKhoan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaiKhoan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaiKhoan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MatKhau, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DienThoai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DienThoai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DienThoai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GioiTinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GioiTinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr style="background-color:black" />
        <div class="form-group">
            <div id="css" class="col-md-offset-2 col-md-10">
                <form>
                    <input value="Lưu chỉnh sửa" type="submit" />
                </form>
                @Html.ActionLink("Trở Về", "XemThongTinKhachHang")
            </div>

        </div>
    </div>
}

<div>
   
</div>
<style>
    #css input[type=submit] {
        padding: 0.7em 0.7em 0.7em 0.7em;
        font-size: 1em;
        font-weight: bold;
        font-family: "Open Sans";
        text-transform: uppercase;
        color: black;
        background-size: 54px 204px;
        background-color: coral;
        border-radius: 2em;
        border: 0.15em solid #F9C23C;
        cursor: pointer;
        transition: all 0.3s ease 0s;
    }

    #css [type="submit"]:hover {
        color: black;
        background-color: whitesmoke;
        border-color: #AAAAAA;
        background-position: 0.75em bottom;
        -webkit-transition: all 0.3s ease;
        transition: all 0.3s ease;
    }

    #css [type="submit"]:focus {
        background-position: 2em -4em;
        -webkit-transition: all 0.3s ease;
        transition: all 0.3s ease;
    }

    #css {
        font-family: 'Open Sans';
        font-style: normal;
        font-weight: 700;
        src: local('Open Sans Bold'), local('OpenSans-Bold'), url(https://themes.googleusercontent.com/static/fonts/opensans/v8/k3k702ZOKiLJc3WVjuplzHhCUOGz7vYGh680lGh-uXM.woff) format('woff');
    }
        #css a {
            font-size: 25px;
            color: coral;
            text-decoration: underline;
        }
</style>
