//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookStore.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;


    public partial class KhachHang
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public KhachHang()
        {
            this.DonHangs = new HashSet<DonHang>();
        }

        public int MaKH { get; set; }

        [Display(Name = "Họ tên")]
        [Required(ErrorMessage = "{0} không được để trống!")]
        [StringLength(25, ErrorMessage = "Không quá 25 ký tự")]
        public string HoTen { get; set; }

        [Display(Name = "Tài khoản")]
        [Required(ErrorMessage = "{0} không được để trống!")]
        [RegularExpression("[a-z0-9_-]{6,20}$", ErrorMessage =" 6 đến 20 ký tự, không viết hoa, khoảng trắng. VD: taotaikhoan1")]
        [BookStore.Models.TrungTK.TrungTKs(ErrorMessage = "Xin lỗi tên tài khoản đã bị trùng")]
        public string TaiKhoan { get; set; }

        [Display(Name = "Mật khẩu")]
        [Required(ErrorMessage = "{0} không được để trống!")]
        [MinLength(6, ErrorMessage = "Ít nhất 6 ký tự!")]
        public string MatKhau { get; set; }

        [Display(Name = "Email")]
        [Required(ErrorMessage = "{0} không được để trống!")]
        [EmailAddress(ErrorMessage = "Sai email,ví dụ email hợp lệ: abc@gmail.com")]
        public string Email { get; set; }

        [Display(Name = "Địa chỉ")]
        [Required(ErrorMessage = "{0} không được để trống!")]
        public string DiaChi { get; set; }

        [Display(Name = "Điện thoại")]
        [Required(ErrorMessage = "{0} không được để trống!")]
        [Phone(ErrorMessage = "Xin hãy nhập số điện thoại!")]
        [MinLength(5,ErrorMessage ="Xin hãy nhập đủ số điện thoại!")]
        [MaxLength(11, ErrorMessage = "Không quá 11 số!")]
        public string DienThoai { get; set; }

        [Display(Name = "Giới tính")]
        [Required(ErrorMessage = "{0} không được để trống!")]
        [StringLength(3, ErrorMessage = "Chỉ điền nam hoặc nữ")]
        public string GioiTinh { get; set; }

        [Display(Name = "Ngày sinh")]
        [Required(ErrorMessage = "{0} không được để trống!")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        [BookStore.Models.UserCustomValidation.ValidBirthDate(ErrorMessage = "Birth Date can not be greater than current date")]
        public Nullable<System.DateTime> NgaySinh { get; set; }
        public Nullable<int> LuotXem { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DonHang> DonHangs { get; set; }
    }
}
